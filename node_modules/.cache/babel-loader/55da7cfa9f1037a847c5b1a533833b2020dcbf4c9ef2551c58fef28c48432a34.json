{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maks\\\\my-app\\\\src\\\\Leaderboard\\\\item.js\";\nimport React from \"react\";\nimport Gold from './Gold.png';\nimport Silver from './Silver.png';\nimport Bronze from './Bronze.png';\nimport { getID } from '../User_account/User_account';\nimport { sendIndex } from './Leaderboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet index = 0; //position in leaderboard\nlet timer;\nlet Ind; //show position\nlet id = getID(); //user id\nconsole.log(id); //check id\nlet user_index = 0;\nlet global_index = 0;\nlet count = 0;\nexport default function Item({\n  row\n}) {\n  // Start timer\n  if (!timer) {\n    timer = setInterval(() => {\n      index = 0;\n    }, 2000); // 2 seconds\n  }\n\n  id = getID();\n  index++;\n  let medalImage = \"\";\n  if (index / 2 === 1) {\n    medalImage = Gold;\n    Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: medalImage,\n      alt: \"Medal\",\n      className: \"Medal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this);\n  } else if (index / 2 === 2) {\n    medalImage = Silver;\n    Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: medalImage,\n      alt: \"Medal\",\n      className: \"Medal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this);\n  } else if (index / 2 === 3) {\n    medalImage = Bronze;\n    Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: medalImage,\n      alt: \"Medal\",\n      className: \"Medal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this);\n  } else {\n    Ind = index / 2;\n  }\n  const isUserItem = row.id === id;\n  const className = isUserItem ? \"item_u\" : \"item\";\n  isUserItem ? user_index = parseInt(Ind, 10) : global_index = parseInt(Ind, 10);\n  sendIndex(global_index, user_index);\n  if (count / 2 <= 10) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__index\",\n        children: Ind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__nickname\",\n        children: row.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__score\",\n        children: [row.age, \"00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item__time\",\n        children: [row.id, \":00:00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), count++]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this);\n  }\n}\n_c = Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","Gold","Silver","Bronze","getID","sendIndex","jsxDEV","_jsxDEV","index","timer","Ind","id","console","log","user_index","global_index","count","Item","row","setInterval","medalImage","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","isUserItem","parseInt","children","firstName","age","_c","$RefreshReg$"],"sources":["C:/Users/Maks/my-app/src/Leaderboard/item.js"],"sourcesContent":["import React from \"react\";\r\nimport Gold from './Gold.png';\r\nimport Silver from './Silver.png';\r\nimport Bronze from './Bronze.png';\r\nimport{getID} from '../User_account/User_account';\r\nimport {sendIndex} from './Leaderboard';\r\n\r\nlet index = 0;  //position in leaderboard\r\nlet timer;\r\nlet Ind;        //show position\r\nlet id = getID(); //user id\r\nconsole.log(id);  //check id\r\nlet user_index = 0;\r\nlet global_index = 0;\r\nlet count = 0;\r\n\r\n\r\n\r\nexport default function Item({ row }) {\r\n  // Start timer\r\n  if (!timer) {\r\n    timer = setInterval(() => {\r\n      index = 0;\r\n    }, 2000); // 2 seconds\r\n  }  \r\n  id = getID();\r\n  index++;\r\n  let medalImage = \"\";\r\n  if (index / 2 === 1) {\r\n    medalImage = Gold;\r\n    Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n  } else if (index / 2 === 2) {\r\n    medalImage = Silver;\r\n    Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n  } else if (index / 2 === 3) {\r\n    medalImage = Bronze;\r\n    Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n  } else {\r\n    Ind = index / 2;\r\n  }\r\n\r\n\r\n  const isUserItem = row.id === id;\r\n\r\n  const className = isUserItem ? \"item_u\" : \"item\";\r\n  isUserItem ? user_index = parseInt(Ind, 10) : global_index = parseInt(Ind, 10);\r\n  sendIndex(global_index, user_index);\r\n  \r\n    if(count/2<=10){\r\n      return (\r\n        <li className={className}>\r\n          <span className=\"item__index\">{Ind}</span>\r\n          <span className=\"item__nickname\">{row.firstName}</span>\r\n          <span className=\"item__score\">{row.age}00</span>\r\n          <span className=\"item__time\">{row.id}:00:00</span>\r\n          {count++}\r\n        </li>\r\n        \r\n      );\r\n     \r\n    } else{\r\n      return(\r\n        <h1></h1>\r\n      )\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}