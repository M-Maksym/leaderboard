{"ast":null,"code":"const actualData = await fetch(`https://localhost:7193/api/Player`).then(response => response.json());\nconsole.log(actualData);\nlet currentData = [];\nfunction mapWithRank(row, i) {\n  return {\n    ...row,\n    ranking: i + 1\n  };\n}\nexport function getInitialData() {\n  currentData = actualData.map(mapWithRank);\n  return currentData;\n}\n//--------------------------------------------------------------------------------\n/*let currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport async function getInitialData() {\r\n  try {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/users'); // Use your actual backend URL instead of '/your-backend-endpoint/data.json'.\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data from the backend.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    currentData = data.map(mapWithRank);\r\n    return currentData;\r\n  } catch (error) {\r\n    // Error handling, for example, you can throw or log an error.\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n}\r\n*/\n//--------------------------------------------------------------------------------\n\n/*import axios from \"axios\";\r\n\r\nlet currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport function getInitialData() {\r\n  return axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => {\r\n      currentData = response.data.map(mapWithRank);\r\n      return currentData;\r\n    });\r\n}*/","map":{"version":3,"names":["actualData","fetch","then","response","json","console","log","currentData","mapWithRank","row","i","ranking","getInitialData","map"],"sources":["C:/Users/Maks/my-app/src/data/users_item.js"],"sourcesContent":["  const actualData = await fetch(\r\n  `https://localhost:7193/api/Player`\r\n  ).then(response => response.json());\r\n\r\n  console.log(actualData) \r\n\r\n\r\nlet currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport function getInitialData() {\r\n  currentData = actualData.map(mapWithRank);\r\n  return currentData;\r\n}\r\n//--------------------------------------------------------------------------------\r\n/*let currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport async function getInitialData() {\r\n  try {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/users'); // Use your actual backend URL instead of '/your-backend-endpoint/data.json'.\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data from the backend.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    currentData = data.map(mapWithRank);\r\n    return currentData;\r\n  } catch (error) {\r\n    // Error handling, for example, you can throw or log an error.\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n}\r\n*/\r\n//--------------------------------------------------------------------------------\r\n\r\n\r\n\r\n/*import axios from \"axios\";\r\n\r\nlet currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport function getInitialData() {\r\n  return axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n    .then((response) => {\r\n      currentData = response.data.map(mapWithRank);\r\n      return currentData;\r\n    });\r\n}*/"],"mappings":"AAAE,MAAMA,UAAU,GAAG,MAAMC,KAAK,CAC7B,mCACD,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;AAEnCC,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;AAGzB,IAAIO,WAAW,GAAG,EAAE;AAEpB,SAASC,WAAWA,CAACC,GAAG,EAAEC,CAAC,EAAE;EAC3B,OAAO;IAAE,GAAGD,GAAG;IAAEE,OAAO,EAAED,CAAC,GAAG;EAAE,CAAC;AACnC;AAEA,OAAO,SAASE,cAAcA,CAAA,EAAG;EAC/BL,WAAW,GAAGP,UAAU,CAACa,GAAG,CAACL,WAAW,CAAC;EACzC,OAAOD,WAAW;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}