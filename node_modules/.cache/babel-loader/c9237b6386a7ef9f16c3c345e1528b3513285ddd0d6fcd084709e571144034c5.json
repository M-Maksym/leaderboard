{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maks\\\\my-app\\\\src\\\\data\\\\users_item.js\",\n  _s2 = $RefreshSig$();\n/*import data from \"./users_data.json\";\r\n\r\nlet currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport function getInitialData() {\r\n  currentData = data.map(mapWithRank);\r\n  return currentData;\r\n}*/\n//--------------------------------------------------------------------------------\n/*let currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport async function getInitialData() {\r\n  try {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/users'); // Use your actual backend URL instead of '/your-backend-endpoint/data.json'.\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data from the backend.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    currentData = data.map(mapWithRank);\r\n    return currentData;\r\n  } catch (error) {\r\n    // Error handling, for example, you can throw or log an error.\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n}*/\n\n//--------------------------------------------------------------------------------\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFetch } from \"react-fetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [data, setData] = useState([]);\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchData = useFetch(\"https://jsonplaceholder.typicode.com/users\");\n    fetchData.then(response => {\n      if (response.ok) {\n        setData(JSON.parse(response.data));\n      }\n    });\n  }, \"KIcwWO6iaxiGxpJ9lhl3lDC57Hc=\", false, function () {\n    return [useFetch];\n  }), []), \"KIcwWO6iaxiGxpJ9lhl3lDC57Hc=\", false, function () {\n    return [useFetch];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: item.name\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useFetch","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","data","setData","fetchData","then","response","ok","JSON","parse","children","map","item","name","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Maks/my-app/src/data/users_item.js"],"sourcesContent":["/*import data from \"./users_data.json\";\r\n\r\nlet currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport function getInitialData() {\r\n  currentData = data.map(mapWithRank);\r\n  return currentData;\r\n}*/\r\n//--------------------------------------------------------------------------------\r\n/*let currentData = [];\r\n\r\nfunction mapWithRank(row, i) {\r\n  return { ...row, ranking: i + 1 };\r\n}\r\n\r\nexport async function getInitialData() {\r\n  try {\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/users'); // Use your actual backend URL instead of '/your-backend-endpoint/data.json'.\r\n    \r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch data from the backend.');\r\n    }\r\n\r\n    const data = await response.json();\r\n    currentData = data.map(mapWithRank);\r\n    return currentData;\r\n  } catch (error) {\r\n    // Error handling, for example, you can throw or log an error.\r\n    console.error('Error fetching data:', error);\r\n    throw error;\r\n  }\r\n}*/\r\n\r\n//--------------------------------------------------------------------------------\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useFetch } from \"react-fetch\";\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = useFetch(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    fetchData.then(response => {\r\n      if (response.ok) {\r\n        setData(JSON.parse(response.data));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data.map(item => (\r\n        <div key={item.id}>{item.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCO,EAAA,CAAAN,SAAS,CAAAM,EAAA,CAAC,MAAM;IAAAA,EAAA;IACd,MAAMI,SAAS,GAAGT,QAAQ,CAAC,4CAA4C,CAAC;IAExES,SAAS,CAACC,IAAI,CAACC,QAAQ,IAAI;MACzB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACfJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAACH,QAAQ,CAACJ,IAAI,CAAC,CAAC;MACpC;IACF,CAAC,CAAC;EACJ,CAAC;IAAA,QAPmBP,QAAQ;EAAA,IAOzB,EAAE,CAAC;IAAA,QAPcA,QAAQ;EAAA;EAS5B,oBACEE,OAAA;IAAAa,QAAA,EACGR,IAAI,CAACS,GAAG,CAACC,IAAI,iBACZf,OAAA;MAAAa,QAAA,EAAoBE,IAAI,CAACC;IAAI,GAAnBD,IAAI,CAACE,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,GAAA,CApBID,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AAsBT,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}