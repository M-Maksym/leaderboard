{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Maks\\\\my-app\\\\src\\\\Leaderboard\\\\item.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Gold from './Gold.png';\nimport Silver from './Silver.png';\nimport Bronze from './Bronze.png';\nimport { getID } from '../User_account/User_account';\nimport { sendIndex } from './Leaderboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet index = 0; // position in leaderboard\nlet timer;\nlet Ind; // show position\nlet id = getID(); // user id\nconsole.log(id); // check id\nlet user_index = 0;\nlet global_index = 0;\nconst Item = ({\n  row\n}) => {\n  _s();\n  const [dataArray, setDataArray] = useState([]);\n\n  // Start timer\n  useEffect(() => {\n    if (!timer) {\n      timer = setInterval(() => {\n        index = 0;\n      }, 2000); // 2 seconds\n    }\n\n    // Clear the timer when the component unmounts\n    return () => clearInterval(timer);\n  }, []);\n\n  // Update dataArray whenever row changes\n  useEffect(() => {\n    index++;\n    let medalImage = \"\";\n    if (index / 2 === 1) {\n      medalImage = Gold;\n      Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: medalImage,\n        alt: \"Medal\",\n        className: \"Medal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    } else if (index / 2 === 2) {\n      medalImage = Silver;\n      Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: medalImage,\n        alt: \"Medal\",\n        className: \"Medal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    } else if (index / 2 === 3) {\n      medalImage = Bronze;\n      Ind = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: medalImage,\n        alt: \"Medal\",\n        className: \"Medal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this);\n    } else {\n      Ind = index / 2;\n    }\n    const isUserItem = row.id === id;\n    const className = isUserItem ? \"item_u\" : \"item\";\n    isUserItem ? user_index = parseInt(Ind, 10) : global_index = parseInt(Ind, 10);\n    sendIndex(global_index, user_index);\n\n    // Add the data to the dataArray\n    setDataArray(prevArray => [...prevArray, {\n      index: Ind,\n      nickname: row.firstName,\n      score: row.age,\n      time: `${row.id}:00:00`\n    }]);\n  }, [row]);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item__index\",\n      children: Ind\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item__nickname\",\n      children: row.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item__score\",\n      children: [row.age, \"00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"item__time\",\n      children: [row.id, \":00:00\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Item, \"hr3Wqb/pRZgWODiEcy+qNrSzYno=\");\n_c = Item;\nexport default Item;\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","useEffect","Gold","Silver","Bronze","getID","sendIndex","jsxDEV","_jsxDEV","index","timer","Ind","id","console","log","user_index","global_index","Item","row","_s","dataArray","setDataArray","setInterval","clearInterval","medalImage","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","isUserItem","parseInt","prevArray","nickname","firstName","score","age","time","children","_c","$RefreshReg$"],"sources":["C:/Users/Maks/my-app/src/Leaderboard/item.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Gold from './Gold.png';\r\nimport Silver from './Silver.png';\r\nimport Bronze from './Bronze.png';\r\nimport { getID } from '../User_account/User_account';\r\nimport { sendIndex } from './Leaderboard';\r\n\r\nlet index = 0;  // position in leaderboard\r\nlet timer;\r\nlet Ind;        // show position\r\nlet id = getID(); // user id\r\nconsole.log(id);  // check id\r\nlet user_index = 0;\r\nlet global_index = 0;\r\n\r\nconst Item = ({ row }) => {\r\n  const [dataArray, setDataArray] = useState([]);\r\n\r\n  // Start timer\r\n  useEffect(() => {\r\n    if (!timer) {\r\n      timer = setInterval(() => {\r\n        index = 0;\r\n      }, 2000); // 2 seconds\r\n    }\r\n\r\n    // Clear the timer when the component unmounts\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Update dataArray whenever row changes\r\n  useEffect(() => {\r\n    index++;\r\n    let medalImage = \"\";\r\n\r\n    if (index / 2 === 1) {\r\n      medalImage = Gold;\r\n      Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n    } else if (index / 2 === 2) {\r\n      medalImage = Silver;\r\n      Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n    } else if (index / 2 === 3) {\r\n      medalImage = Bronze;\r\n      Ind = <img src={medalImage} alt=\"Medal\" className=\"Medal\" />;\r\n    } else {\r\n      Ind = index / 2;\r\n    }\r\n\r\n    const isUserItem = row.id === id;\r\n    const className = isUserItem ? \"item_u\" : \"item\";\r\n    isUserItem ? (user_index = parseInt(Ind, 10)) : (global_index = parseInt(Ind, 10));\r\n    sendIndex(global_index, user_index);\r\n\r\n    // Add the data to the dataArray\r\n    setDataArray((prevArray) => [...prevArray, { index: Ind, nickname: row.firstName, score: row.age, time: `${row.id}:00:00` }]);\r\n  }, [row]);\r\n\r\n  return (\r\n    <li className={className}>\r\n      <span className=\"item__index\">{Ind}</span>\r\n      <span className=\"item__nickname\">{row.firstName}</span>\r\n      <span className=\"item__score\">{row.age}00</span>\r\n      <span className=\"item__time\">{row.id}:00:00</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}